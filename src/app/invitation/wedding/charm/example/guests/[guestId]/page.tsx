import fs from "fs";
import path from "path";

export default async function GuestPage({
  params,
}: {
  params: Promise<{ guestId: string }>;
}) {
  const { guestId } = await params; // üëà –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ await

  const clientId = "example"; // —Ñ—ñ–∫—Å–æ–≤–∞–Ω–∏–π –∫–ª—ñ—î–Ω—Ç –ø–æ–∫–∏ —â–æ

  const filePath = path.join(
    process.cwd(),
    `src/app/invitation/wedding/charm/${clientId}/data.json`
  );

  const data = JSON.parse(fs.readFileSync(filePath, "utf8"));

  const guest = data.guests?.find(
    (g: { id: string; name: string }) => g.id === guestId
  );

  if (!guest) {
    return (
      <main className="flex flex-col items-center justify-center min-h-screen bg-[#37585c] text-white">
        <h1>–ì–æ—Å—Ç—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ üò¢</h1>
        <p>–ú–æ–∂–ª–∏–≤–æ, –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–µ –∞–±–æ –±—É–ª–æ –≤–≤–µ–¥–µ–Ω–µ –∑ –ø–æ–º–∏–ª–∫–æ—é.</p>
      </main>
    );
  }

  return (
    <main className="flex flex-col items-center justify-center min-h-screen bg-[#37585c] text-[#f5eee3]">
      <h1 className="text-3xl font-semibold mb-4">
        –ü—Ä–∏–≤—ñ—Ç, {guest.name.split(" ")[0]}!
      </h1>

      <p className="mb-2 text-lg">
        {data.hero.names} –∑–∞–ø—Ä–æ—à—É—é—Ç—å —Ç–µ–±–µ –Ω–∞ —Å–≤–æ—î –≤–µ—Å—ñ–ª–ª—è üíç
      </p>

      <p className="mb-6 text-sm text-gray-200">{data.hero.date}</p>

      <a
        href={`/invitation/wedding/charm/${clientId}`}
        className="border border-[#f5eee3] px-4 py-2 rounded hover:bg-[#f5eee3] hover:text-[#37585c] transition"
      >
        –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è
      </a>
    </main>
  );
}
